const axios = require('axios');
const {url}  = require('url');
const Express = require('express');
const qs = require('qs');
const cors = require('cors')

const PORT = process.env.PORT || 5002;
const app = Express();
app.use(cors())
var source = '';
var target = '';
var text = '';


app.get('/languages',(req,res,next)=>{


        var {url} = req;
        console.log("Printing url search: "+url);

      //  var query = url_parts.query;
        const link = new URL(url,`http://${req.headers.host}`);
      //  res.write("Link : "+link+" and Data: "+link.searchParams.get('hello'));

        source = link.searchParams.get('source');
        target = link.searchParams.get('target');
        text   = link.searchParams.get('text');

        console.log("Source "+link.searchParams.get('source'));
        console.log("Target "+link.searchParams.get('target'));
        console.log("Text "+link.searchParams.get('text'));
		


axios({
    method: "post",
    url: "https://iam.cloud.ibm.com/identity/token",
    data: qs.stringify({"grant_type":  "urn:ibm:params:oauth:grant-type:apikey",
           "apikey": "0kcNZaXFOrRtNQswM93LXf07al0cE56uxyQZznX5CDey"
    }),
    headers: { "Content-Type": "application/x-www-form-urlencoded" ,
               "Accept": "application/json"},
  })
    .then(function (response) {
      //handle success
      //console.log(response.data.access_token);
	  access_token = response.data.access_token;


 axios({
    method: "get",
    url: "https://api.us-east.language-translator.watson.cloud.ibm.com/instances/aab4d449-7adb-4422-946a-8ecac3bed52b/v3/languages?version=2018-05-01",
    headers: { "Content-Type": "application/x-www-form-urlencoded" ,
               "Authorization": "Bearer "+access_token},
  }) 
    .then(function (response) {
		
	  console.log("AFTER REQUEST: "+response.data.languages[0].language);
	  res.write(response.data.languages[0].language);
      res.end();         
	  	})
	  .catch(function (response) {
          //handle error
         // console.log(response);
        });
    })
    .catch(function (response) {
      //handle error
     // console.log(response);
    });

});



app.get('/translate',(req,res,next)=>{
 

        var {url} = req;
        console.log("Printing url search: "+url);

      //  var query = url_parts.query;
        const link = new URL(url,`http://${req.headers.host}`);
      //  res.write("Link : "+link+" and Data: "+link.searchParams.get('hello'));

        source = link.searchParams.get('source');
        target = link.searchParams.get('target');
        text   = link.searchParams.get('text');

        console.log("Source "+link.searchParams.get('source'));
        console.log("Target "+link.searchParams.get('target'));
        console.log("Text "+link.searchParams.get('text'));
		


axios({
    method: "post",
    url: "https://iam.cloud.ibm.com/identity/token",
    data: qs.stringify({"grant_type":  "urn:ibm:params:oauth:grant-type:apikey",
           "apikey": "0kcNZaXFOrRtNQswM93LXf07al0cE56uxyQZznX5CDey"
    }),
    headers: { "Content-Type": "application/x-www-form-urlencoded" ,
               "Accept": "application/json"},
  })
    .then(function (response) {
      //handle success
      //console.log(response.data.access_token);
	  access_token = response.data.access_token;


      axios({
        method: "post",
        url: "https://api.us-east.language-translator.watson.cloud.ibm.com/instances/aab4d449-7adb-4422-946a-8ecac3bed52b/v3/translate?version=2018-05-01",
        data: {"text": decodeURI(text),
               "source": source,
               "target" : target  
        },
        headers: { //"Content-Type": "application/json" ,
                    "Authorization" :"Bearer "+access_token},
      })
        .then(function (response) {
          //handle success
          console.log(response.data);
          res.write(response.data.translations[0].translation);
          res.end();         
        })
        .catch(function (response) {
          //handle error
          console.log(response);
        });

    })
    .catch(function (response) {
      //handle error
     // console.log(response);
    });

});



app.listen(PORT, console.log("Listening on port: "+PORT));